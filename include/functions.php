<?php	defined('DS') ? null : define('DS', DIRECTORY_SEPARATOR);	defined('SITE_ROOT') ? null : define('SITE_ROOT', DS.'xampp'.DS.'htdocs'.DS.'e2w');	date_default_timezone_set("America/New_York");	$date = date("Y-m-d H:i:s");		function redirect_to($new_location) {	  header("Location: " . $new_location);	  exit;	}		function datetime_to_text($datetime="") {	  $unixdatetime = strtotime($datetime);	  return strftime("%B %d, %Y", $unixdatetime);	}		function datetime_to_us($datetime="") {	  $unixdatetime = strtotime($datetime);	  return strftime("%m-%d-%Y", $unixdatetime);	}		function mysql_prep($string) {		global $connect;				$escaped_string = mysqli_real_escape_string($connect, $string);		return $escaped_string;	}		function confirm_query($result_set) {		global $connect;				if (!$result_set) {			die("Database query failed." . mysqli_error($connect));		}	}		function password_check($password, $existing_hash) {		// existing hash contains format and salt at start	  $hash = password_verify($password, $existing_hash);	  if ($hash === true) {	    return true;	  } else {	    return false;	  }	}		function attempt_admin_login($username, $password) {		$admin = find_admin_by_username($username);		if ($admin) {			// found admin, now check password			if (password_check($password, $admin["password"])) {				// password matches				$_SESSION["loggedIn"] = $admin["username"];				log_action("Login", $_SESSION["loggedIn"] . " logged in");				return true;			} else {				// password does not match				log_action("Login", "Incorrect login information.");				$_SESSION["errors"] .= "Incorrect login information. Please try again.";				return false;			}		} else {			// admin not found			log_action("Login", "Incorrect login information.");			$_SESSION["errors"] .= "Incorrect login information. Please try again.";			return false;		}	}			function login_verification() {		if(isset($_SESSION['loggedIn'])) {			redirect_to("index.php");		}	}		function noLogin_verification() {		if(!isset($_SESSION["loggedIn"])) {			redirect_to("index.php");		}	}		function cleanValues($values) {		global $connect;		$returnValue = null;				if(is_array($values)) {			$returnValue = array();			$arrayValues = $values;						for($i=0; $i < count($arrayValues); $i++) {				$newValue = mysqli_real_escape_string($connect, trim($arrayValues[$i]));				array_push($returnValue, $newValue);			}		} else {			$returnValue = "";			$returnValue = mysqli_real_escape_string($connect, trim($values));		}				return $returnValue;	}		function reArrayFiles($file_post) {		$file_ary = array();		$file_count = count($file_post["upload_photo"]["name"]);		$file_keys = array_keys($file_post["upload_photo"]);				for ($i=0; $i<$file_count; $i++) {			foreach ($file_keys as $key) {				$file_ary["upload_photo"][$i][$key] = $file_post["upload_photo"][$key][$i];			}		}		return $file_ary;	}		function log_action($action, $message="") {		$logfile = SITE_ROOT.DS.'files'.DS.'logs.txt';		$new = file_exists($logfile) ? false : true;		$timestamp = strftime("%Y-%m-%d %H:%M:%S", time());		if($handle = fopen($logfile, "a")) {			$content = $timestamp . " | " . $action . ": " . $message . "\n";			fwrite($handle, $content);			fclose($handle);			if($new) {				$handle = fopen($logfile, "w");				$content = $timestamp . " | " . $action . " | " . $message . "\n";				fwrite($handle, $content);				fclose($handle);			}		} else {			echo "Unable to create file";		}	}		function find_all_events() {		global $connect;				$query  = "SELECT * FROM ";		$query .= "trip_location ";		$query .= "ORDER BY trip_year DESC;";		$admin_set = mysqli_query($connect, $query);		confirm_query($admin_set);				if($admin_set) {			return $admin_set;		} else {			return false;		}				mysqli_close($connect);	}		function find_event_by_id($eventID) {		global $connect;				$query  = "SELECT * FROM ";		$query .= "trip_location ";		$query .= "WHERE trip_id = '".$eventID."' ";		$query .= "LIMIT 1;";		$admin = mysqli_query($connect, $query);		confirm_query($admin);				if($admin_set = mysqli_fetch_assoc($admin)) {			return $admin_set;		} else {			return false;		}				mysqli_close($connect);	}		function find_event_by_name($eventName) {		global $connect;				$query  = "SELECT * FROM ";		$query .= "trip_location ";		$query .= "WHERE trip_location = '".$eventName."' ";		$query .= "LIMIT 1;";		$admin = mysqli_query($connect, $query);		confirm_query($admin);				if($admin_set = mysqli_fetch_assoc($admin)) {			return $admin_set;		} else {			return false;		}				mysqli_close($connect);	}		function find_event_users($eventName) {		global $connect;				$eventID = find_event_by_name($eventName);				$query  = "SELECT * FROM ";		$query .= "distribution_list ";		$query .= "WHERE trip_location = '".$eventID["trip_id"]."';";		$admin_set = mysqli_query($connect, $query);		confirm_query($admin_set);				if($admin_set) {			return $admin_set;		} else {			return false;		}				mysqli_close($connect);	}		function find_event_user($eventName, $userID) {		global $connect;				$eventID = find_event_by_name($eventName);				$query  = "SELECT * FROM ";		$query .= "distribution_list ";		$query .= "WHERE trip_location = '".$eventID["trip_id"]."' AND user_id = '".$userID."';";		$admin_set = mysqli_query($connect, $query);		confirm_query($admin_set);				if($admin = mysqli_fetch_assoc($admin_set)) {			return $admin;		} else {			return null;		}				mysqli_close($connect);	}		function find_activities_by_trip_id($tripID) {		global $connect;				$query  = "SELECT * FROM ";		$query .= "trip_activities ";		$query .= "WHERE trip_id = '".$tripID."';";		$admin_set = mysqli_query($connect, $query);		confirm_query($admin_set);				if($admin_set) {			return $admin_set;		} else {			return false;		}				mysqli_close($connect);	}		function find_admin_by_username($username) {		global $connect;				$safe_username = mysqli_real_escape_string($connect, $username);				$query  = "SELECT * ";		$query .= "FROM admin_users ";		$query .= "WHERE username = '".$safe_username."' ";		$query .= "LIMIT 1";		$admin_set = mysqli_query($connect, $query);		confirm_query($admin_set);		if($admin = mysqli_fetch_assoc($admin_set)) {			return $admin;		} else {			return null;		}				mysqli_close($connect);	}		function find_admin_by_id($ID) {		global $connect;				$query  = "SELECT * ";		$query .= "FROM admin_users ";		$query .= "WHERE user_id = '".$ID."' ";		$query .= "LIMIT 1";		$admin_set = mysqli_query($connect, $query);		confirm_query($admin_set);		if($admin = mysqli_fetch_assoc($admin_set)) {			return $admin;		} else {			return null;		}				mysqli_close($connect);	}	function find_all_users() {		global $connect;						$query  = "SELECT * ";		$query .= "FROM admin_users";		$admin_set = mysqli_query($connect, $query);		confirm_query($admin_set);		if($admin_set) {			return $admin_set;		} else {			return null;		}				mysqli_close($connect);	}		function find_picture_name_by_id($pictureID) {		global $connect;					$getPictureName  = "SELECT picture_name FROM ";		$getPictureName .= "trip_pictures WHERE ";		$getPictureName .= "picture_id = '".$pictureID."' ";		$getPictureName .= "LIMIT 1;";				$admin_set = mysqli_query($connect, $getPictureName);		confirm_query($admin_set);		if($admin = mysqli_fetch_assoc($admin_set)) {			return $admin;		} else {			return null;		}				mysqli_close($connect);	}		function find_token_by_id($token) {		global $connect;					$getPictureName  = "SELECT payment_token FROM ";		$getPictureName .= "travel_payments WHERE ";		$getPictureName .= "payment_token = '".$token."' ";		$getPictureName .= "LIMIT 1;";				$admin_set = mysqli_query($connect, $getPictureName);		confirm_query($admin_set);		if($admin = mysqli_fetch_assoc($admin_set)) {			return $admin;		} else {			return null;		}				mysqli_close($connect);	}		function find_all_questions() {		global $connect;				$query  = "SELECT * FROM travel_questions ";		$query .= "ORDER BY date_question DESC;";		$admin_set = mysqli_query($connect, $query);		confirm_query($admin_set);		if($admin_set) {			return $admin_set;		} else {			return null;		}				mysqli_close($connect);	}		function find_all_suggestions() {		global $connect;				$query  = "SELECT * FROM travel_suggestions ";		$query .= "ORDER BY date_suggestion DESC;";		$admin_set = mysqli_query($connect, $query);		confirm_query($admin_set);		if($admin_set) {			return $admin_set;		} else {			return null;		}				mysqli_close($connect);	}		function find_all_suggestions_by_location($locationName) {		global $connect;				$query  = "SELECT * FROM travel_suggestions ";		$query .= "WHERE option_suggestion = '".$locationName."'";		$admin_set = mysqli_query($connect, $query);		confirm_query($admin_set);		if($admin_set) {			return $admin_set;		} else {			return null;		}				mysqli_close($connect);	}		function find_all_trip_months() {		global $connect;				$query  = "SELECT * FROM vacation_month;";		$admin = mysqli_query($connect, $query);		confirm_query($admin);		if($admin) {			return $admin;		} else {			return null;		}				mysqli_close($connect);	}		function find_all_trip_years() {		global $connect;				$query  = "SELECT * FROM vacation_year;";		$admin = mysqli_query($connect, $query);		confirm_query($admin);		if($admin) {			return $admin;		} else {			return null;		}				mysqli_close($connect);	}		function find_all_pictures_by_id($tripID) {		global $connect;				$query  = "SELECT * FROM trip_pictures ";		$query .= "WHERE trip_id = '".$tripID."';";		$admin = mysqli_query($connect, $query);		confirm_query($admin);		if($admin) {			return $admin;		} else {			return null;		}				mysqli_close($connect);	}		function find_all_videos_by_id($tripID) {		global $connect;				$query  = "SELECT * FROM travel_videos ";		$query .= "WHERE trip_id = '".$tripID."';";		$admin = mysqli_query($connect, $query);		confirm_query($admin);		if($admin) {			return $admin;		} else {			return null;		}				mysqli_close($connect);	}		function find_last_inserted_id() {		global $connect;				$lastID = mysqli_insert_id($connect);		return $lastID;	}		function createNewLocationPage($location, $tripMonth, $tripYear, $tripPhoto) {		$getTemplate = file_get_contents("new_location_page_template.php");		$getTemplate = str_ireplace("*TripLocation*", $location, $getTemplate);		$getTemplate = str_ireplace("*TripLocationID*", str_ireplace(" ", "_", strtolower($location)), $getTemplate);		$create_new_page = file_put_contents("../public/".str_ireplace(" ", "_", strtolower($location)) . $tripYear .".php", $getTemplate);	}		function createPassword($value) {		$hash_password = password_hash($value, PASSWORD_DEFAULT);		return $hash_password;	}		function checkNewUsername($value) {		$username = strtolower(cleanValues($value));		$usernameDupe = find_admin_by_username($username);		$errors = 0;		if($username == "")		{			$_SESSION['errors'] .= "<li class='error_item'>Username cannot be empty</li>";			$errors++;		} 		if($username == $usernameDupe['username']) {			$_SESSION['errors'] .= "<li class='error_item'>Username \"".strtolower($username)."\" already exist</li>";			$errors++;		}		if(!preg_match("/[A-Za-z0-9']{7,50}/", $username) && $username != "")		{			$_SESSION['errors'] .= "<li class='error_item'>Username must be atleast 7 characters long and contain only letter's and numbers</li>";			$errors++;		}		if($errors > 0) {			return false;		} else {			return $username;		}	}		function checkNewPassword($password) {		$password = cleanValues($password);		$errors = 0;		if($password == "")		{			$_SESSION['errors'] .= "<li class='error_item'>Password cannot be empty</li>";			$errors++;		}		if(!preg_match("/[A-Za-z0-9']{7,50}/", $password))		{			$_SESSION['errors'] .= "<li class='error_item'>Password must be atleast 7 characters long and must contain only letter's and numbers</li>";			$errors++;		}		if($errors > 0) {			return false;		} else {			return $password;		}	}		function checkNewName($value1="", $value2="", $value3="") {		$firstname = cleanValues(ucwords(strtolower($value1)));		$lastname = cleanValues(ucwords(strtolower($value2)));		$nickname = cleanValues($value3);		$names = [$firstname, $lastname, $nickname];		$errors = 0;				if($firstname == "") {			$_SESSION['errors'] .= "<li class='error_item'>Firstname cannot be empty</li>";			$errors++;			}				if(!preg_match("/^[A-Za-z' -]{1,50}$/", $firstname)) {			$_SESSION['errors'] .= "<li class='error_item'>Firstname must contain only letter's, hyphens and apostrophe's</li>";			$errors++;			}				if($lastname == "")	{			$_SESSION['errors'] .= "<li class='error_item'>Lastname cannot be empty</li>";			$errors++;		}				if(!preg_match("/^[A-Za-z' -]{1,50}$/", $lastname)) {			$_SESSION['errors'] .= "<li class='error_item'>Lastname must contain only letter's, hyphens and apostrophe's</li>";			$errors++;		}					if(($nickname != "") && (!preg_match("/^[A-Za-z0-9' -]{1,50}$/", $nickname))) {			$_SESSION['errors'] .= "<li class='error_item'>Nickname can only contain letters, numbers hyphens and apostrophe's</li>";			$errors++;		}				if($errors > 0) {			return $errors;		} else {			return $names;		}	}		function checkNewEmail($value) {				$email = cleanValues(strtolower($value));		$errors = 0;				if($email == "") {			$_SESSION["errors"] .= "<li class='errorItem'>Email cannot be empty</li>";			$errors++;		}				if(($email != "") && (!preg_match("/.+@.+\\..+$/", $email))) {			$_SESSION["errors"] .= "<li class='errorItem'>Wrong format for email</li>";			$errors++;		}				if($errors > 0) {			return $errors;		} else {			return $email;		}	}		function checkNewPicture($filesArray="") {		$target_dir = "../public/images/";		$target_file = $target_dir . basename($filesArray["name"]);		$uploadOk = 1;		$imageFileType = pathinfo($target_file,PATHINFO_EXTENSION);		// Check if image file is a actual image or fake image		if($filesArray["name"] != "") {			$check = getimagesize($filesArray["tmp_name"]);			if($check !== false) {				$uploadOk = 1;			} else {				$_SESSION["errors"] .= "<li class='errorItem'>File is not an image. (".$filesArray["name"].")</li>";				$uploadOk = 0;			}			// Check if file already exists			if (file_exists($target_file)) {				$_SESSION["errors"] .= "<li class='errorItem'>Sorry, file already exists. (".$filesArray["name"].")</li>";				$uploadOk = 0;			}			// Check file size			if ($filesArray["size"] > 5500000) {				$_SESSION["errors"] .= "<li class='errorItem'>Sorry, your file is too large. (".$filesArray["name"].")</li>";				$uploadOk = 0;			}			// Allow certain file formats			if($imageFileType != "jpg" && $imageFileType != "png" && $imageFileType != "jpeg"			&& $imageFileType != "gif" && $imageFileType != "JPG" && $imageFileType != "PNG" 			&& $imageFileType != "JPEG" && $imageFileType != "GIF") {				$_SESSION["errors"] .= "<li class='errorItem'>Sorry, only JPG, JPEG, PNG & GIF files are allowed.</li>";				$uploadOk = 0;			}		}				// Check if $uploadOk is set to 0 by an error		if ($uploadOk == 0) {			$_SESSION["errors"] .= "<li class='errorItem'>Sorry, your file was not uploaded. (".$filesArray["name"].")</li>";			return ["error" => $filesArray["error"], "errorName" => $filesArray["name"]];		// if everything is ok, try to upload file		} else {			if (move_uploaded_file($filesArray["tmp_name"], $target_file)) {				return ["name" => $filesArray["name"]];			} else {				return ["error" => $filesArray["error"], "errorName" => $filesArray["name"]];			}		}	}		function checkNewDocument($filesArray="") {		$target_dir = "../files/";		$target_file = $target_dir . basename($filesArray["name"]);		$uploadOk = 1;		$documentFileType = pathinfo($target_file,PATHINFO_EXTENSION);		// Check if image file is a actual image or fake image		if($filesArray["name"] != "") {			// Check if file already exists			if (file_exists($target_file)) {				$_SESSION["errors"] .= "<li class='errorItem'>Sorry, file already exists. (".$filesArray["name"].")</li>";				$uploadOk = 0;			}			// Check file size			if ($filesArray["size"] > 750000) {				$_SESSION["errors"] .= "<li class='errorItem'>Sorry, your file is too large. (".$filesArray["name"].")</li>";				$uploadOk = 0;			}			// Allow certain file formats			if($documentFileType != "pdf" && $documentFileType != "docx" && $documentFileType != "ppt"			&& $documentFileType != "doc" && $documentFileType != "pptx") {				$_SESSION["errors"] .= "<li class='errorItem'>Sorry, only PDF, DOCX, DOC, PPT & PPTX files are allowed.</li>";				$uploadOk = 0;			}		}				// Check if $uploadOk is set to 0 by an error		if ($uploadOk == 0) {			$_SESSION["errors"] .= "<li class='errorItem'>Sorry, your file was not uploaded. (".$filesArray["name"].")</li>";			return ["error" => $filesArray["error"], "errorName" => $filesArray["name"]];		// if everything is ok, try to upload file		} else {			if (move_uploaded_file($filesArray["tmp_name"], $target_file)) {				return ["name" => $filesArray["name"]];			} else {				return ["error" => $filesArray["error"], "errorName" => $filesArray["name"]];			}		}	}		function checkRegistration($firstName, $lastName, $username, $email, $password) {		$names = checkNewName($firstName, $lastName);		$email = checkNewEmail($email);		$password = checkNewPassword($password);		$username = checkNewUsername($username);		if(is_numeric($names) || is_numeric($email) || is_numeric($username) || $password == false) {			return false;		} else {			$allValues = [$names[0], $names[1], $username, $email, $password];			createUserAccount($allValues);		 return true;		}	}?>